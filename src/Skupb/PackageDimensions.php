<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: github.com/digota/digota/sku/skupb/sku.proto

namespace Skupb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>skupb.PackageDimensions</code>
 */
class PackageDimensions extends \Google\Protobuf\Internal\Message
{
    /**
     * <code>double height = 1;</code>
     */
    private $height = 0.0;
    /**
     * <code>double length = 2;</code>
     */
    private $length = 0.0;
    /**
     * <code>double weight = 3;</code>
     */
    private $weight = 0.0;
    /**
     * <code>double width = 4;</code>
     */
    private $width = 0.0;

    public function __construct() {
        \GPBMetadata\GithubCom\Digota\Digota\Sku\Skupb\Sku::initOnce();
        parent::__construct();
    }

    /**
     * <code>double height = 1;</code>
     */
    public function getHeight()
    {
        return $this->height;
    }

    /**
     * <code>double height = 1;</code>
     */
    public function setHeight($var)
    {
        GPBUtil::checkDouble($var);
        $this->height = $var;
    }

    /**
     * <code>double length = 2;</code>
     */
    public function getLength()
    {
        return $this->length;
    }

    /**
     * <code>double length = 2;</code>
     */
    public function setLength($var)
    {
        GPBUtil::checkDouble($var);
        $this->length = $var;
    }

    /**
     * <code>double weight = 3;</code>
     */
    public function getWeight()
    {
        return $this->weight;
    }

    /**
     * <code>double weight = 3;</code>
     */
    public function setWeight($var)
    {
        GPBUtil::checkDouble($var);
        $this->weight = $var;
    }

    /**
     * <code>double width = 4;</code>
     */
    public function getWidth()
    {
        return $this->width;
    }

    /**
     * <code>double width = 4;</code>
     */
    public function setWidth($var)
    {
        GPBUtil::checkDouble($var);
        $this->width = $var;
    }

}

